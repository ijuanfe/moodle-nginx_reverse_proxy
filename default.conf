server {
  listen         80;
  listen         [::]:80;
  server_name    localhost;
  location / {
    return    301  https://$server_name$request_uri;
  }
} # End port 80

server {
  listen         443 ssl http2;
  listen         [::]:443 ssl http2;
  server_name    localhost;

  # To create a self-signed SSL certificate for localhost development run the following command:
  # openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/nginx-selfsigned.key -out /etc/ssl/certs/nginx-selfsigned.crt
  ssl_certificate        /etc/ssl/certs/nginx-selfsigned.crt;
  ssl_certificate_key    /etc/ssl/private/nginx-selfsigned.key;

  #charset koi8-r;
  #access_log  /var/log/nginx/host.access.log  main;

  location / {
    #root     /usr/share/nginx/html;
    #index    index.html  index.htm;
    return    301  https://$host/moodle/;
  }

  location /moodle/ {
    proxy_redirect      off;
    proxy_set_header    Host $host;
    proxy_set_header    X-Real-IP $remote_addr;
    proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_pass          http://192.168.1.2:8080;
  }

  #error_page    404  /404.html;

  # Redirect server error pages to the static page /50x.html
  #
  error_page    500 502 503 504  /50x.html;
  location = /50x.html {
    root    /usr/share/nginx/html;
  }

  # Proxy the PHP scripts to Apache listening on 127.0.0.1:80
  #
  #location ~ \.php$ {
  #  proxy_pass    http://127.0.0.1;
  #}

  # Pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
  #
  #location ~ \.php$ {
  #  root             html;
  #  fastcgi_pass     127.0.0.1:9000;
  #  fastcgi_index    index.php;
  #  fastcgi_param    SCRIPT_FILENAME  /scripts$fastcgi_script_name;
  #  include          fastcgi_params;
  #}

  # Deny access to .htaccess files, if Apache's document
  # root concurs with nginx's one
  #
  #location ~ /\.ht {
  #  deny    all;
  #}
} # End port 443
